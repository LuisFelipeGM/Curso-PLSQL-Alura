-- CRIANDO A PROCEDURE COM A FORMATAÇÃO DE CNPJ (APENAS UM EXERRCICIO) COM O IN E OUT
CREATE OR REPLACE PROCEDURE FORMATA_CNPJ(
    P_CNPJ IN CLIENTE.CNPJ%TYPE,
    P_CNPJ_SAIDA OUT CLIENTE.CNPJ%TYPE
)
IS
BEGIN
    P_CNPJ_SAIDA:= SUBSTR(P_CNPJ,1,3) || '/' || SUBSTR(P_CNPJ,4,2) || '-' || SUBSTR(P_CNPJ,6);
END;

-- TESTANDO A PROCEDURE
SET SERVEROUTPUT ON

DECLARE
    V_CNPJ CLIENTE.CNPJ%TYPE;
    V_CNPJ_SAIDA CLIENTE.CNPJ%TYPE;
BEGIN
    V_CNPJ := '1234567890';
    V_CNPJ_SAIDA := '1234567890';
    DBMS_OUTPUT.PUT_LINE(V_CNPJ || '     ' || V_CNPJ_SAIDA);
    
    -- POR SER OUT JA MUDA O VALOR DA VARIAVEL MESMO SENDO PROCEDURE
    FORMATA_CNPJ(V_CNPJ, V_CNPJ_SAIDA);
    DBMS_OUTPUT.PUT_LINE(V_CNPJ || '     ' || V_CNPJ_SAIDA);
END;

--------------------------------------------------------------
-- FAZENDO EXPERIENCIAS

-- NÃO É POSSIVEL USAR A VARIAVEL OUT COMO IN TAMBEM
CREATE OR REPLACE PROCEDURE FORMATA_CNPJ_SIMPLES
(P_CNPJ_SAIDA OUT CLIENTE.CNPJ%TYPE)
IS
BEGIN
    P_CNPJ_SAIDA:= SUBSTR(P_CNPJ_SAIDA,1,3) || '/' || SUBSTR(P_CNPJ_SAIDA,4,2) || '-' || SUBSTR(P_CNPJ_SAIDA,6);
END;

-- TESTANDO A PROCEDURE VEMOS QUE A VARIAVEL OUT ENTRA COMO VAZIA NA PROCEDURE
-- ENTÃO NÃO É ATRIBUIDO VALOR PARA USAR ELA COMO IN
SET SERVEROUTPUT ON

DECLARE
    V_CNPJ CLIENTE.CNPJ%TYPE;
BEGIN
    V_CNPJ := '1234567890';
    DBMS_OUTPUT.PUT_LINE(V_CNPJ);
    FORMATA_CNPJ_SIMPLES(V_CNPJ);
    DBMS_OUTPUT.PUT_LINE(V_CNPJ);
END;


--------------------------------------------------------------
-- PARAMETRO IN OUT
-- COM ESSE PARAMETRO IN OUT É POSSIVEL USAR O MESMO PARAMETRO PARA ENTRADA E SAIDA
CREATE OR REPLACE PROCEDURE FORMATA_CNPJ_SIMPLES
(P_CNPJ_SAIDA IN OUT CLIENTE.CNPJ%TYPE)
IS
BEGIN
    P_CNPJ_SAIDA:= SUBSTR(P_CNPJ_SAIDA,1,3) || '/' || SUBSTR(P_CNPJ_SAIDA,4,2) || '-' || SUBSTR(P_CNPJ_SAIDA,6);
END;

-- TESTANDO A PROCEDURE VEMOS QUE A VARIAVEL IN OUT FUNCIONA COM A EXPERIENCIA
-- QUE TESTAMOS ANTERIORMENTE
SET SERVEROUTPUT ON

DECLARE
    V_CNPJ CLIENTE.CNPJ%TYPE;
BEGIN
    V_CNPJ := '1234567890';
    DBMS_OUTPUT.PUT_LINE(V_CNPJ);
    FORMATA_CNPJ_SIMPLES(V_CNPJ);
    DBMS_OUTPUT.PUT_LINE(V_CNPJ);
END;

--------------------------------------------------------------
-- ALTERANDO A PROCEDURE INCLUIR_CLIENTE PARA EXECUTAR O FORMATA_CNPJ ANTES DE INSERIR

create or replace NONEDITIONABLE PROCEDURE incluir_cliente
(
p_ID CLIENTE.ID%type,
p_RAZAO CLIENTE.RAZAO_SOCIAL%type,
p_CNPJ CLIENTE.CNPJ%type,
p_SEGMERCADO CLIENTE.SEGMERCADO_ID%type,
p_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%type
)
IS
  v_CATEGORIA CLIENTE.CATEGORIA%type;
  V_CNPJ CLIENTE.CNPJ%TYPE;
BEGIN

   v_CATEGORIA := categoria_cliente(p_FATURAMENTO);
   
   FORMATA_CNPJ(p_CNPJ, V_CNPJ);

   INSERT INTO CLIENTE
   VALUES 
   (p_ID, p_RAZAO, V_CNPJ, p_SEGMERCADO, SYSDATE, p_FATURAMENTO, v_CATEGORIA);
   COMMIT;
END;

SELECT * FROM CLIENTE;

EXECUTE INCLUIR_CLIENTE(4, 'SUPERMERCADO BOM DEMAIS', '9876543210', 1, 50000);

--------------------------------------------------------------
-- ALTERANDO SEGMENTO DE MERCADO

SELECT * FROM CLIENTE;
-- ADICIONANDO MAIS 5 CLIENTES
EXECUTE INCLUIR_CLIENTE (5, 'MERCEARIA XYZ', '9876541235', 1, 10000);
EXECUTE INCLUIR_CLIENTE (6, 'FARMACIA ABC', '9716548935', 1, 10000);
EXECUTE INCLUIR_CLIENTE (7, 'MERCADINHO QWE', '9876541235', 1, 10000);
EXECUTE INCLUIR_CLIENTE (8, 'TAVERNA POI', '9286541235', 1, 10000);
EXECUTE INCLUIR_CLIENTE (9, 'BAR HJK', '9876691235', 1, 10000);

-- CRIANDO PROCEDURE

CREATE OR REPLACE PROCEDURE ATUALIZAR_SEGMERCADO
(P_ID CLIENTE.ID%TYPE, P_SEGMERCADO_ID CLIENTE.SEGMERCADO_ID%TYPE)
IS
BEGIN
    UPDATE CLIENTE SET SEGMERCADO_ID = P_SEGMERCADO_ID WHERE ID = P_ID;
    COMMIT;
END;

-- EXECUTANDO PROCEDURE

EXECUTE ATUALIZAR_SEGMERCADO(1, 3);
EXECUTE ATUALIZAR_SEGMERCADO(2, 3);
EXECUTE ATUALIZAR_SEGMERCADO(3, 3);
EXECUTE ATUALIZAR_SEGMERCADO(4, 3);




--------------------------------------------------------------
-- REALIZANDO OS EXERCICIOS DA AULA 1
-- EX1

SELECT * FROM PRODUTO_VENDA_EXERCICIO;

CREATE OR REPLACE PROCEDURE CALCULO_IMPOSTO(
    P_ID IN PRODUTO_VENDA_EXERCICIO.ID%TYPE,
    P_VALOR_IMPOSTO OUT FLOAT
)
IS
    V_PRECO PRODUTO_VENDA_EXERCICIO.PRECO%TYPE;
    V_VALOR_TOTAL PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE;
    V_PERCENTUAL_IMPOSTO PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
BEGIN
    SELECT PRECO, VALOR_TOTAL, PERCENTUAL_IMPOSTO INTO V_PRECO, V_VALOR_TOTAL, V_PERCENTUAL_IMPOSTO
    FROM PRODUTO_VENDA_EXERCICIO WHERE ID = P_ID;
    P_VALOR_IMPOSTO := (V_PRECO * V_VALOR_TOTAL)*(V_PERCENTUAL_IMPOSTO/100);
END;

-- TESTANDO A PROCEDURE
SET SERVEROUTPUT ON

DECLARE
    V_ID PRODUTO_VENDA_EXERCICIO.ID%TYPE;
    V_VALOR_IMPOSTO FLOAT;
BEGIN
    V_ID := 1;
    CALCULO_IMPOSTO(V_ID, V_VALOR_IMPOSTO);
    DBMS_OUTPUT.PUT_LINE('VALOR DO IMPOSTO: ' || V_VALOR_IMPOSTO);
END;

--------------------------------------------------------------
-- EX2

create or replace PROCEDURE DUPLICA_VALOR
(p_VALOR IN OUT FLOAT)
IS
BEGIN
  p_VALOR := p_VALOR * 2;
END;

--------------------------------------------------------------
-- EX2
-- Usando a procedure CALCULO_IMPOSTO, calcule o imposto da venda 2. 
-- Crie um programa em PL/SQL que exiba esse resultado.

SELECT * FROM PRODUTO_VENDA_EXERCICIO;

DECLARE
    v_PERCENTUAL FLOAT;
BEGIN
    CALCULO_IMPOSTO(2, v_PERCENTUAL);
    DBMS_OUTPUT.PUT_LINE(v_PERCENTUAL);
END;